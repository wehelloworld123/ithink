<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.ithink.mapper.auto.ProCopyrightMapper">
  <resultMap id="BaseResultMap" type="com.fc.ithink.model.auto.ProCopyright">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="pro_no" jdbcType="VARCHAR" property="proNo" />
    <result column="creation_id" jdbcType="VARCHAR" property="creationId" />
    <result column="createTyp" jdbcType="INTEGER" property="createTyp" />
    <result column="copyright" jdbcType="DECIMAL" property="copyright" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="author_id" jdbcType="VARCHAR" property="authorId" />
    <result column="file_str" jdbcType="VARCHAR" property="fileStr" />
    <result column="allotType" jdbcType="VARCHAR" property="allotType" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_dat" jdbcType="TIMESTAMP" property="createDat" />
    <result column="l_update_dat" jdbcType="TIMESTAMP" property="lUpdateDat" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="pro_nm" jdbcType="VARCHAR" property="proNm" />
    <result column="creation_nm" jdbcType="VARCHAR" property="creationNm" />
    <result column="reward" jdbcType="INTEGER" property="reward" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
  
	  	  	      	id,
       	  	      	pro_no,
       	  	      	creation_id,
       	  	      	createTyp,
       	  	      	copyright,
       	  	      	author,
       	  	      	author_id,
       	  	      	file_str,
       	  	      	allotType,
       	  	      	role,
       	  	      	create_by,
       	  	      	create_dat,
       	  	      	l_update_dat,
       	  	      	is_del,
       	  	      	pro_nm,
       	  	      	creation_nm,
       	  	    	  	reward
       	  	
  </sql>
  
  <select id="selectByExample" parameterType="com.fc.ithink.model.auto.ProCopyrightExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pro_copyright
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_pro_copyright
    where id = #{id,jdbcType=BIGINT}
  </select>



  <select id="selectByCondition" parameterType="com.fc.ithink.model.auto.ProCopyright" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_pro_copyright
    where is_del = 0
    <if test="id != null and id != ''">
      id = #{id,jdbcType=BIGINT}
    </if>
    <if test="proNm != null and proNm != ''">
      and (
      pro_nm = #{proNm,jdbcType=VARCHAR}
      or
      creation_nm = #{proNm,jdbcType=VARCHAR}
      )
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_pro_copyright
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fc.ithink.model.auto.ProCopyrightExample">
    delete from t_pro_copyright
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="com.fc.ithink.model.auto.ProCopyright">
    insert into t_pro_copyright (
      	  	       id,
       	  	       pro_no,
       	  	       creation_id,
       	  	       createTyp,
       	  	       copyright,
       	  	       author,
       	  	       author_id,
       	  	       file_str,
       	  	       allotType,
       	  	       role,
       	  	       create_by,
       	  	       create_dat,
       	  	       l_update_dat,
       	  	       is_del,
       	  	       pro_nm,
       	  	       creation_nm,
       	  	    	  reward
       	    )
    values (
	  	  	      	#{id,jdbcType=BIGINT},
       	  	      	#{proNo,jdbcType=VARCHAR},
       	  	      	#{creationId,jdbcType=VARCHAR},
       	  	      	#{createTyp,jdbcType=INTEGER},
       	  	      	#{copyright,jdbcType=DECIMAL},
       	  	      	#{author,jdbcType=VARCHAR},
       	  	      	#{authorId,jdbcType=VARCHAR},
       	  	      	#{fileStr,jdbcType=VARCHAR},
       	  	      	#{allotType,jdbcType=VARCHAR},
       	  	      	#{role,jdbcType=VARCHAR},
       	  	      	#{createBy,jdbcType=VARCHAR},
       	  	      	#{createDat,jdbcType=TIMESTAMP},
       	  	      	#{lUpdateDat,jdbcType=TIMESTAMP},
       	  	      	#{isDel,jdbcType=INTEGER},
       	  	      	#{proNm,jdbcType=VARCHAR},
       	  	      	#{creationNm,jdbcType=VARCHAR},
       	  	    	  #{reward,jdbcType=INTEGER}
       	    )
  </insert>
  
  <insert id="insertSelective" parameterType="com.fc.ithink.model.auto.ProCopyright">
    insert into t_pro_copyright
    <trim prefix="(" suffix=")" suffixOverrides=",">
          
      <if test="id != null">
        id,
      </if>
         
      <if test="proNo != null">
        pro_no,
      </if>
         
      <if test="creationId != null">
        creation_id,
      </if>
         
      <if test="createTyp != null">
        createTyp,
      </if>
         
      <if test="copyright != null">
        copyright,
      </if>
         
      <if test="author != null">
        author,
      </if>
         
      <if test="authorId != null">
        author_id,
      </if>
         
      <if test="fileStr != null">
        file_str,
      </if>
         
      <if test="allotType != null">
        allotType,
      </if>
         
      <if test="role != null">
        role,
      </if>
         
      <if test="createBy != null">
        create_by,
      </if>
         
      <if test="createDat != null">
        create_dat,
      </if>
         
      <if test="lUpdateDat != null">
        l_update_dat,
      </if>
         
      <if test="isDel != null">
        is_del,
      </if>
         
      <if test="proNm != null">
        pro_nm,
      </if>
         
      <if test="creationNm != null">
        creation_nm,
      </if>
         
      <if test="reward != null">
        reward,
      </if>
         </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
          <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
          <if test="proNo != null">
        #{proNo,jdbcType=VARCHAR},
      </if>
          <if test="creationId != null">
        #{creationId,jdbcType=VARCHAR},
      </if>
          <if test="createTyp != null">
        #{createTyp,jdbcType=INTEGER},
      </if>
          <if test="copyright != null">
        #{copyright,jdbcType=DECIMAL},
      </if>
          <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
          <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
          <if test="fileStr != null">
        #{fileStr,jdbcType=VARCHAR},
      </if>
          <if test="allotType != null">
        #{allotType,jdbcType=VARCHAR},
      </if>
          <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
          <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
          <if test="createDat != null">
        #{createDat,jdbcType=TIMESTAMP},
      </if>
          <if test="lUpdateDat != null">
        #{lUpdateDat,jdbcType=TIMESTAMP},
      </if>
          <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
          <if test="proNm != null">
        #{proNm,jdbcType=VARCHAR},
      </if>
          <if test="creationNm != null">
        #{creationNm,jdbcType=VARCHAR},
      </if>
          <if test="reward != null">
        #{reward,jdbcType=INTEGER},
      </if>
        </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.fc.ithink.model.auto.ProCopyrightExample" resultType="java.lang.Long">
    select count(*) from t_pro_copyright
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update t_pro_copyright
    <set>
          <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
          <if test="record.proNo != null">
        pro_no = #{record.proNo,jdbcType=VARCHAR},
      </if>
          <if test="record.creationId != null">
        creation_id = #{record.creationId,jdbcType=VARCHAR},
      </if>
          <if test="record.createTyp != null">
        createTyp = #{record.createTyp,jdbcType=INTEGER},
      </if>
          <if test="record.copyright != null">
        copyright = #{record.copyright,jdbcType=DECIMAL},
      </if>
          <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
          <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=VARCHAR},
      </if>
          <if test="record.fileStr != null">
        file_str = #{record.fileStr,jdbcType=VARCHAR},
      </if>
          <if test="record.allotType != null">
        allotType = #{record.allotType,jdbcType=VARCHAR},
      </if>
          <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
          <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
          <if test="record.createDat != null">
        create_dat = #{record.createDat,jdbcType=TIMESTAMP},
      </if>
          <if test="record.lUpdateDat != null">
        l_update_dat = #{record.lUpdateDat,jdbcType=TIMESTAMP},
      </if>
          <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
          <if test="record.proNm != null">
        pro_nm = #{record.proNm,jdbcType=VARCHAR},
      </if>
          <if test="record.creationNm != null">
        creation_nm = #{record.creationNm,jdbcType=VARCHAR},
      </if>
          <if test="record.reward != null">
        reward = #{record.reward,jdbcType=INTEGER},
      </if>
         
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <update id="updateByExample" parameterType="map">
    update t_pro_copyright
    set
            	     	 
    	 id = #{record.id,jdbcType=BIGINT},
    	         	     	 
    	 pro_no = #{record.proNo,jdbcType=VARCHAR},
    	         	     	 
    	 creation_id = #{record.creationId,jdbcType=VARCHAR},
    	         	     	 
    	 createTyp = #{record.createTyp,jdbcType=INTEGER},
    	         	     	 
    	 copyright = #{record.copyright,jdbcType=DECIMAL},
    	         	     	 
    	 author = #{record.author,jdbcType=VARCHAR},
    	         	     	 
    	 author_id = #{record.authorId,jdbcType=VARCHAR},
    	         	     	 
    	 file_str = #{record.fileStr,jdbcType=VARCHAR},
    	         	     	 
    	 allotType = #{record.allotType,jdbcType=VARCHAR},
    	         	     	 
    	 role = #{record.role,jdbcType=VARCHAR},
    	         	     	 
    	 create_by = #{record.createBy,jdbcType=VARCHAR},
    	         	     	 
    	 create_dat = #{record.createDat,jdbcType=TIMESTAMP},
    	         	     	 
    	 l_update_dat = #{record.lUpdateDat,jdbcType=TIMESTAMP},
    	         	     	 
    	 is_del = #{record.isDel,jdbcType=INTEGER},
    	         	     	 
    	 pro_nm = #{record.proNm,jdbcType=VARCHAR},
    	         	     	 
    	 creation_nm = #{record.creationNm,jdbcType=VARCHAR},
    	         	     	 
    	 reward = #{record.reward,jdbcType=INTEGER}
    	         
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
      <update id="updateByPrimaryKeySelective" parameterType="com.fc.ithink.model.auto.ProCopyright">
    update t_pro_copyright
    <set>
                          
      <if test="proNo != null">
        pro_no = #{proNo,jdbcType=VARCHAR},
      </if>
                      
      <if test="creationId != null">
        creation_id = #{creationId,jdbcType=VARCHAR},
      </if>
                      
      <if test="createTyp != null">
        createTyp = #{createTyp,jdbcType=INTEGER},
      </if>
                      
      <if test="copyright != null">
        copyright = #{copyright,jdbcType=DECIMAL},
      </if>
                      
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
                      
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=VARCHAR},
      </if>
                      
      <if test="fileStr != null">
        file_str = #{fileStr,jdbcType=VARCHAR},
      </if>
                      
      <if test="allotType != null">
        allotType = #{allotType,jdbcType=VARCHAR},
      </if>
                      
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
                      
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
                      
      <if test="createDat != null">
        create_dat = #{createDat,jdbcType=TIMESTAMP},
      </if>
                      
      <if test="lUpdateDat != null">
        l_update_dat = #{lUpdateDat,jdbcType=TIMESTAMP},
      </if>
                      
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
                      
      <if test="proNm != null">
        pro_nm = #{proNm,jdbcType=VARCHAR},
      </if>
                      
      <if test="creationNm != null">
        creation_nm = #{creationNm,jdbcType=VARCHAR},
      </if>
                      
      <if test="reward != null">
        reward = #{reward,jdbcType=INTEGER},
      </if>
              </set>
    
    where 
            
    id = #{id,jdbcType=BIGINT}
                                                                                                                                          
  </update>

      	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	

  <update id="updateByPrimaryKey" parameterType="com.fc.ithink.model.auto.ProCopyright">
    update t_pro_copyright
    set 
    		 		 	  	  
		pro_no = #{proNo,jdbcType=VARCHAR},
	  	 		 	  	  
		creation_id = #{creationId,jdbcType=VARCHAR},
	  	 		 	  	  
		createTyp = #{createTyp,jdbcType=INTEGER},
	  	 		 	  	  
		copyright = #{copyright,jdbcType=DECIMAL},
	  	 		 	  	  
		author = #{author,jdbcType=VARCHAR},
	  	 		 	  	  
		author_id = #{authorId,jdbcType=VARCHAR},
	  	 		 	  	  
		file_str = #{fileStr,jdbcType=VARCHAR},
	  	 		 	  	  
		allotType = #{allotType,jdbcType=VARCHAR},
	  	 		 	  	  
		role = #{role,jdbcType=VARCHAR},
	  	 		 	  	  
		create_by = #{createBy,jdbcType=VARCHAR},
	  	 		 	  	  
		create_dat = #{createDat,jdbcType=TIMESTAMP},
	  	 		 	  	  
		l_update_dat = #{lUpdateDat,jdbcType=TIMESTAMP},
	  	 		 	  	  
		is_del = #{isDel,jdbcType=INTEGER},
	  	 		 	  	  
		pro_nm = #{proNm,jdbcType=VARCHAR},
	  	 		 	  	  
		creation_nm = #{creationNm,jdbcType=VARCHAR},
	  	 		 	  		
		reward = #{reward,jdbcType=INTEGER}
	  	 		
    where 
            
    id = #{id,jdbcType=BIGINT}
                                                                                                                                            
  </update>
  
                                                                                         
</mapper>